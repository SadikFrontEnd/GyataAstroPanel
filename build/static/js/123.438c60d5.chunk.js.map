{"version":3,"sources":["views/pages/authentication/login/LoginJWT.js","views/apps/astrochat/Livestreaming.js"],"names":["LoginJWT","props","handlechange","e","setState","target","name","value","handleSignUp","window","location","replace","handleLogin","preventDefault","axiosConfig","post","mobile","state","then","response","console","log","data","otpMsg","msg","swal","catch","error","handleOtp","otp","localStorage","setItem","_id","JSON","stringify","Fragment","this","className","onSubmit","type","placeholder","onChange","render","history","Ripple","color","maxLength","size","style","cursor","onClick","React","Component","getastroID","parse","getItem","fullname","connect","values","auth","login","loginWithJWT","i","randomID","len","result","chars","maxPos","length","charAt","Math","floor","random","getUrlParams","url","href","urlStr","split","URLSearchParams","App","roomID","get","role_str","role","ZegoUIKitPrebuilt","Host","Cohost","Audience","sharedLinks","push","protocol","host","pathname","astrodetails","kitToken","generateKitTokenForTest","myMeeting","element","create","joinRoom","container","scenario","mode","LiveStreaming","config","ref","width","height"],"mappings":"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","file":"static/js/123.438c60d5.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from 'react-router-dom'\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport { Phone } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\n// import axios from \"axios\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n// import { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n\r\nclass LoginJWT extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mobile: \"\",\r\n      otpMsg: \"\",\r\n      otp: \"\",\r\n    };\r\n  }\r\n  handlechange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSignUp = (e) => {\r\n    window.location.replace(\"/#/pages/register\");\r\n    // this.props.history.push(\"/pages/register\");\r\n  };\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    axiosConfig\r\n      .post(\"/user/loginsendotp\", {\r\n        mobile: this.state.mobile,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({ otpMsg: response.data.msg });\r\n        if (response.data.msg === \"Waiting for Admin Approval\") {\r\n          swal(\"Waiting for Admin Approval\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        swal(\r\n          \"error!\",\r\n          \"Invalied! Please enter valied Phone No. or Password\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n  handleOtp = (e) => {\r\n    e.preventDefault();\r\n    axiosConfig\r\n      .post(\"/user/loginVerify\", {\r\n        mobile: this.state.mobile,\r\n        otp: this.state.otp,\r\n      })\r\n\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        // console.log(response.data._id);\r\n        if (response.data.msg === \"otp verified\") {\r\n          swal(\"Login Successfull\");\r\n          localStorage.setItem(\"astroId\", response.data._id);\r\n          localStorage.setItem(\"astroData\", JSON.stringify(response.data));\r\n          // localStorage.setItem(\"user_id\", response.data.data._id);\r\n          // this.props.history.push(\"/\");\r\n          window.location.replace(\"/#/\");\r\n          // swal(\"Login Successfull\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data._id);\r\n        swal(\r\n          \"error!\",\r\n          \"Invalied! Please enter valied Phone No. or Password\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.otpMsg === \"otp Send Successfully\" ? (\r\n          <CardBody className=\"pt-1\">\r\n            <Form onSubmit={this.handleOtp}>\r\n              <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"otp\"\r\n                  placeholder=\"Enter OTP\"\r\n                  value={this.state.otp}\r\n                  onChange={this.handlechange}\r\n                  // required\r\n                />\r\n\r\n                <Label>Phone</Label>\r\n              </FormGroup>\r\n\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button.Ripple color=\"primary\" type=\"submit\">\r\n                      Login\r\n                    </Button.Ripple>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Form>\r\n          </CardBody>\r\n        ) : (\r\n          <CardBody className=\"pt-1\">\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                <Input\r\n                  type=\"number\"\r\n                  maxLength={10}\r\n                  name=\"mobile\"\r\n                  placeholder=\"Enter here your  valid Mobile Number\"\r\n                  value={this.state.mobile}\r\n                  onChange={this.handlechange}\r\n                />\r\n                <div className=\"form-control-position\">\r\n                  <Phone size={15} />\r\n                </div>\r\n                <Label>Phone</Label>\r\n              </FormGroup>\r\n\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button.Ripple color=\"primary\" type=\"submit\">\r\n                      Get OTP\r\n                    </Button.Ripple>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Form>\r\n\r\n            <div className=\"d-flex mt-2\">\r\n              <div>New On Our PlatForm </div>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <div\r\n                    className=\"ml-1\"\r\n                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                    onClick={this.handleSignUp}\r\n                  >\r\n                    Sign up\r\n                  </div>\r\n                )}\r\n              />\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <button color=\"primary\" type=\"submit\">\r\n                    Sign up\r\n                  </button>\r\n                )}\r\n              /> */}\r\n            </div>\r\n          </CardBody>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\nexport function getastroID() {\r\n  const name = JSON.parse(localStorage.getItem(\"astroData\"));\r\n  const names = name.fullname;\r\n  return names;\r\n}\r\n","import * as React from \"react\";\r\nimport { getastroID } from \"../../pages/authentication/login/LoginJWT\";\r\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\r\nimport \"../../../assets/scss/pages/live-streaming.scss\";\r\nfunction randomID(len) {\r\n  let result = \"\";\r\n  if (result) return result;\r\n  var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\r\n    maxPos = chars.length,\r\n    i;\r\n  len = len || 5;\r\n  for (i = 0; i < len; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * maxPos));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function getUrlParams(url = window.location.href) {\r\n  let urlStr = url.split(\"?\")[1];\r\n  return new URLSearchParams(urlStr);\r\n}\r\n\r\nexport default function App() {\r\n  const roomID = getUrlParams().get(\"roomID\") || randomID(5);\r\n  console.log(\"Room\", roomID);\r\n  let role_str = getUrlParams(window.location.href).get(\"role\") || \"Host\";\r\n  const role =\r\n    role_str === \"Host\"\r\n      ? ZegoUIKitPrebuilt.Host\r\n      : role_str === \"Cohost\"\r\n      ? ZegoUIKitPrebuilt.Cohost\r\n      : ZegoUIKitPrebuilt.Audience;\r\n\r\n  let sharedLinks = [];\r\n  if (role === ZegoUIKitPrebuilt.Host || role === ZegoUIKitPrebuilt.Cohost) {\r\n    sharedLinks.push({\r\n      name: \"Join as co-host\",\r\n      url:\r\n        window.location.protocol +\r\n        \"//\" +\r\n        window.location.host +\r\n        window.location.pathname +\r\n        \"?roomID=\" +\r\n        roomID +\r\n        \"&role=Cohost\",\r\n    });\r\n  }\r\n  sharedLinks.push({\r\n    name: \"Join as audience\",\r\n    url:\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname +\r\n      \"?roomID=\" +\r\n      roomID +\r\n      \"&role=Audience\",\r\n  });\r\n  // generate Kit Token\r\n  const appID = 912338888;\r\n  const astrodetails = getastroID();\r\n  console.log(\"astrodetails\", astrodetails);\r\n  const serverSecret = \"2d117c2d3654bbba1611b3631f5ba758\";\r\n  const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\r\n    appID,\r\n    serverSecret,\r\n    roomID,\r\n    randomID(5),\r\n    // randomID(5),\r\n    astrodetails\r\n  );\r\n  console.log(roomID);\r\n  // start the call\r\n  let myMeeting = async (element) => {\r\n    // Create instance object from Kit Token.\r\n    const zp = ZegoUIKitPrebuilt.create(kitToken);\r\n    // start the call\r\n\r\n    // console.log(\"hhhh>>>>\", zp.ZegoUIKitPrebuilt.roomID);\r\n    zp.joinRoom({\r\n      container: element,\r\n      scenario: {\r\n        mode: ZegoUIKitPrebuilt.LiveStreaming,\r\n        config: {\r\n          role,\r\n        },\r\n      },\r\n      sharedLinks,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"myCallContainer \"\r\n      ref={myMeeting}\r\n      style={{ width: \"100vw\", height: \"100vh\" }}\r\n    ></div>\r\n  );\r\n}\r\n"],"sourceRoot":""}